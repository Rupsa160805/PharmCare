// Default language is English
let selectedLanguage = "en";

// Health Conditions Mapping to Specializations
const healthConditions = {
    "heart": "Cardiologist",
    "cardio": "Cardiologist",
    "bones": "Orthopedic",
    "orthopedic": "Orthopedic",
    "nerves": "Neurologist",
    "neurology": "Neurologist",
    "cancer": "Oncologist",
    "oncology": "Oncologist",
    "skin": "Dermatologist",
    "dermatology": "Dermatologist",
    "pulmonary": "Pulmonologist",
    "lungs": "Pulmonologist",
    "breathing": "Pulmonologist",
    "fever": "General Physician",
    "pain": "General Physician",
    "women": "Gynecologist",
    "pregnancy": "Gynecologist"
};

// Doctors List with Consultation Fees
const doctors = {
    "Cardiologist": [
        { name: "Dr. Rajesh Sharma", fee: "‚Çπ800" },
        { name: "Dr. Anjali Mehta", fee: "‚Çπ900" }
    ],
    "Orthopedic": [
        { name: "Dr. Vikram Das", fee: "‚Çπ700" },
        { name: "Dr. Riya Sen", fee: "‚Çπ750" }
    ],
    "Neurologist": [
        { name: "Dr. Alok Verma", fee: "‚Çπ1000" },
        { name: "Dr. Sneha Kapoor", fee: "‚Çπ950" }
    ],
    "Oncologist": [
        { name: "Dr. Rajiv Menon", fee: "‚Çπ1500" },
        { name: "Dr. Neha Agarwal", fee: "‚Çπ1400" }
    ],
    "Dermatologist": [
        { name: "Dr. Sanjay Bose", fee: "‚Çπ600" },
        { name: "Dr. Payal Gupta", fee: "‚Çπ650" }
    ],
    "Pulmonologist": [
        { name: "Dr. Arvind Iyer", fee: "‚Çπ900" },
        { name: "Dr. Kiran Das", fee: "‚Çπ850" }
    ],
    "Gynecologist": [
        { name: "Dr. Kavita Sharma", fee: "‚Çπ900" },
        { name: "Dr. Poonam Das", fee: "‚Çπ850" }
    ],
    "General Physician": [
        { name: "Dr. Ramesh Patil", fee: "‚Çπ400" },
        { name: "Dr. Priya Malhotra", fee: "‚Çπ450" }
    ]
};

// Hospitals Categorized by Specialization
const hospitals = {
    "Cardiologist": [
        "üè• Heart Care Hospital, Main Street",
        "üè• Pulse Cardiac Center, Downtown"
    ],
    "Orthopedic": [
        "üè• Bone & Joint Clinic, City Center",
        "üè• Ortho Plus Hospital, Park Avenue"
    ],
    "Neurologist": [
        "üè• Brain & Spine Institute, Lake Road",
        "üè• Neuro Care Hospital, Tech Park"
    ],
    "Oncologist": [
        "üè• Cancer Institute, South Block",
        "üè• Oncology Care Center, West End"
    ],
    "Dermatologist": [
        "üè• Skin & Hair Clinic, Midtown",
        "üè• Glow Dermatology Center, Central Plaza"
    ],
    "Pulmonologist": [
        "üè• Respiratory Health Center, Green Valley",
        "üè• Pulmonary Care Hospital, Elm Street"
    ],
    "Gynecologist": [
        "üè• Women's Health Center, Green Lane",
        "üè• Motherhood Hospital, City Square"
    ],
    "General Physician": [
        "üè• MedLife Clinic, High Street",
        "üè• City General Hospital, Downtown"
    ]
};

// Multilingual Responses
const responses = {
    "en": {
        "hello": "Hello! How can I assist you today?",
        "hi": "Hi there! How may I help you?",
        "thanks": "You're welcome! Let me know if you need further assistance.",
        "thank you": "You're welcome! Stay healthy.",
        "sorry": "No worries! How can I assist you?",
        "language": "Which language do you prefer? (English, Hindi, Bengali)",
        "ask_disease": "Please mention your health concern so I can suggest suitable doctors and hospitals.",
        "doctor_recommendation": "Based on your concern, here are some recommended doctors:",
        "hospital_recommendation": "Here are some hospitals near you specializing in this field:"
    },
    "hi": {
        "hello": "‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Å?",
        "hi": "‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•ç‡§Ø‡§æ ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Å?",
        "thanks": "‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à! ‡§Æ‡•Å‡§ù‡•á ‡§¨‡§§‡§æ‡§è‡§Ç ‡§ï‡§ø ‡§î‡§∞ ‡§ï‡•ã‡§à ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ö‡§æ‡§π‡§ø‡§è‡•§",
        "thank you": "‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶! ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§∞‡§π‡§ø‡§è‡•§",
        "sorry": "‡§ï‡•ã‡§à ‡§¨‡§æ‡§§ ‡§®‡§π‡•Ä‡§Ç! ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡§ø‡§∏ ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞ ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Å?",
        "language": "‡§Ü‡§™ ‡§ï‡•å‡§® ‡§∏‡•Ä ‡§≠‡§æ‡§∑‡§æ ‡§™‡§∏‡§Ç‡§¶ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç? (‡§Ö‡§Ç‡§ó‡•ç‡§∞‡•á‡§ú‡§º‡•Ä, ‡§π‡§ø‡§Ç‡§¶‡•Ä, ‡§¨‡§Ç‡§ó‡§æ‡§≤‡•Ä)",
        "ask_disease": "‡§ï‡•É‡§™‡§Ø‡§æ ‡§Ö‡§™‡§®‡•Ä ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§¨‡§§‡§æ‡§è‡§Ç ‡§§‡§æ‡§ï‡§ø ‡§Æ‡•à‡§Ç ‡§â‡§™‡§Ø‡•Å‡§ï‡•ç‡§§ ‡§°‡•â‡§ï‡•ç‡§ü‡§∞‡•ã‡§Ç ‡§î‡§∞ ‡§Ö‡§∏‡•ç‡§™‡§§‡§æ‡§≤‡•ã‡§Ç ‡§ï‡§æ ‡§∏‡•Å‡§ù‡§æ‡§µ ‡§¶‡•á ‡§∏‡§ï‡•Ç‡§Ç‡•§",
        "doctor_recommendation": "‡§Ü‡§™‡§ï‡•Ä ‡§∏‡§Æ‡§∏‡•ç‡§Ø‡§æ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞, ‡§Ø‡§π‡§æ‡§Å ‡§ï‡•Å‡§õ ‡§Ö‡§®‡•Å‡§∂‡§Ç‡§∏‡§ø‡§§ ‡§°‡•â‡§ï‡•ç‡§ü‡§∞ ‡§π‡•à‡§Ç:",
        "hospital_recommendation": "‡§Ø‡§π‡§æ‡§Å ‡§Ü‡§™‡§ï‡•á ‡§®‡§ø‡§ï‡§ü‡§§‡§Æ ‡§Ö‡§∏‡•ç‡§™‡§§‡§æ‡§≤ ‡§π‡•à‡§Ç ‡§ú‡•ã ‡§á‡§∏ ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§Æ‡•á‡§Ç ‡§µ‡§ø‡§∂‡•á‡§∑‡§ú‡•ç‡§û‡§§‡§æ ‡§∞‡§ñ‡§§‡•á ‡§π‡•à‡§Ç:"
    },
    "bn": {
        "hello": "‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã! ‡¶Ü‡¶Æ‡¶ø ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶ï‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø?",
        "hi": "‡¶π‡ßç‡¶Ø‡¶æ‡¶≤‡ßã! ‡¶Ü‡¶Æ‡¶ø ‡¶ï‡¶ø‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø?",
        "thanks": "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ! ‡¶Ü‡¶∞‡¶ì ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶Ø‡¶º‡ßã‡¶ú‡¶® ‡¶π‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá ‡¶ú‡¶æ‡¶®‡¶æ‡¶®‡•§",
        "thank you": "‡¶ß‡¶®‡ßç‡¶Ø‡¶¨‡¶æ‡¶¶! ‡¶∏‡ßÅ‡¶∏‡ßç‡¶• ‡¶•‡¶æ‡¶ï‡ßÅ‡¶®‡•§",
        "sorry": "‡¶ï‡ßã‡¶®‡ßã ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶®‡ßá‡¶á! ‡¶Ü‡¶Æ‡¶ø ‡¶ï‡ßÄ‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡¶æ‡¶π‡¶æ‡¶Ø‡ßç‡¶Ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø?",
        "language": "‡¶Ü‡¶™‡¶®‡¶ø ‡¶ï‡ßã‡¶® ‡¶≠‡¶æ‡¶∑‡¶æ ‡¶™‡¶õ‡¶®‡ßç‡¶¶ ‡¶ï‡¶∞‡ßá‡¶®? (‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø, ‡¶π‡¶ø‡¶®‡ßç‡¶¶‡¶ø, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ)",
        "ask_disease": "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶ï‡¶•‡¶æ ‡¶â‡¶≤‡ßç‡¶≤‡ßá‡¶ñ ‡¶ï‡¶∞‡ßÅ‡¶® ‡¶Ø‡¶æ‡¶§‡ßá ‡¶Ü‡¶Æ‡¶ø ‡¶â‡¶™‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§ ‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶π‡¶æ‡¶∏‡¶™‡¶æ‡¶§‡¶æ‡¶≤ ‡¶∏‡ßÅ‡¶™‡¶æ‡¶∞‡¶ø‡¶∂ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø‡•§",
        "doctor_recommendation": "‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶≠‡¶ø‡¶§‡ßç‡¶§‡¶ø‡¶§‡ßá, ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶∏‡ßÅ‡¶™‡¶æ‡¶∞‡¶ø‡¶∂‡¶ï‡ßÉ‡¶§ ‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞ ‡¶Ü‡¶õ‡ßá‡¶®:",
        "hospital_recommendation": "‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶õ‡¶æ‡¶ï‡¶æ‡¶õ‡¶ø ‡¶ï‡¶ø‡¶õ‡ßÅ ‡¶π‡¶æ‡¶∏‡¶™‡¶æ‡¶§‡¶æ‡¶≤ ‡¶∞‡¶Ø‡¶º‡ßá‡¶õ‡ßá ‡¶Ø‡¶æ ‡¶è‡¶á ‡¶ï‡ßç‡¶∑‡ßá‡¶§‡ßç‡¶∞‡ßá ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û:"
    }
};

// Chatbot Initialization
document.addEventListener("DOMContentLoaded", () => {
    console.log("‚úÖ Chatbot initialized.");
    document.getElementById("send-btn").addEventListener("click", processUserInput);
    document.getElementById("user-input").addEventListener("keypress", (event) => {
        if (event.key === "Enter") processUserInput();
    });
});

function processUserInput() {
    const userInputField = document.getElementById("user-input");
    const userText = userInputField.value.trim().toLowerCase();

    if (!userText) return;

    displayMessage(userText, "user");
    userInputField.value = "";

    if (userText.includes("hindi")) {
        selectedLanguage = "hi";
        displayMessage("‡§Ö‡§¨ ‡§∏‡•á ‡§Æ‡•à‡§Ç ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§Æ‡•á‡§Ç ‡§ú‡§µ‡§æ‡§¨ ‡§¶‡•Ç‡§Ç‡§ó‡§æ‡•§", "bot");
        return;
    } else if (userText.includes("bengali")) {
        selectedLanguage = "bn";
        displayMessage("‡¶è‡¶ñ‡¶® ‡¶•‡ßá‡¶ï‡ßá ‡¶Ü‡¶Æ‡¶ø ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶Ø‡¶º ‡¶â‡¶§‡ßç‡¶§‡¶∞ ‡¶¶‡ßá‡¶¨‡•§", "bot");
        return;
    } else if (userText.includes("english")) {
        selectedLanguage = "en";
        displayMessage("I will now respond in English.", "bot");
        return;
    }

    let botResponse = responses[selectedLanguage][userText] || responses[selectedLanguage]["ask_disease"];

    for (const keyword in healthConditions) {
        if (userText.includes(keyword)) {
            botResponse = responses[selectedLanguage]["doctor_recommendation"];
            displayMessage(botResponse, "bot");
            const specialization = healthConditions[keyword];
            fetchDoctors(specialization);
            fetchNearbyHospitals(specialization);
            return;
        }
    }

    displayMessage(botResponse, "bot");
}
